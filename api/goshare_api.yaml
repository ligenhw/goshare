swagger: "2.0"
info:
  description: GoShare项目后端接口文档
  version: "0.0.3"
  title: "Goshare"
  termsOfService: "https://www.bestlang.cn/"
  contact:
    email: "ligenhw@outlook.com"
  license:
    name: "MIT"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "bestlang.cn"
basePath: "/api"
tags:
- name: "article"
  description: 文章
- name: tag
  description: 标签
- name: "user"
  description: 用户
- name: "comment"
  description: 评论
- name: oauth
  description: 三方登录
schemes:
- "https"
paths:
  /article:
    get:
      tags:
      - "article"
      summary: 查询文章列表
      description: 查询所有文章
      operationId: GetArticles
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: query
        name: limit
        type: integer
        description: 每页数量
        default: 10
      - in: query
        name: offset
        type: integer
        description: 偏移量
        default: 0
      - in: query
        name: userId
        type: integer
        description: 用户id
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ArticlesResp"
        405:
          description: "Invalid input"
    post:
      tags:
      - article
      summary: 创建文章
      description: 发布一篇文章
      operationId: CreateArticle
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: '#/definitions/Article'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
      - article
      summary: 修改文章
      description: 验证cookie, 验证权限，文章的作者可以操作
      operationId: UpdateArticle
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: '#/definitions/Article'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
  /article/{id}:
    get:
      tags:
      - article
      summary: 查询文章详情
      description: 根据文章id查询文章内容和作者信息
      operationId: GetArticle
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "文章id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/ArticlesResp'
    delete:
      tags:
      - article
      summary: 删除文章
      description: 验证cookie, 验证权限，文章的作者可以操作
      operationId: DeleteArticle
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "文章id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
  /tag:
    get:
      tags:
      - tag
      summary: 查询标签
      description: 查询所有标签
      operationId: GetTags
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        405:
          description: "Invalid input"
  /user:
    get:
      tags:
      - user
      summary: 查询当前登录的用户信息
      description: '接口验证请求cookie, 请求需要在cookie中携带sessionId, 未登录会分配sessionId'
      operationId: GetUser
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/User'
        405:
          description: "Invalid input"
    post:
      tags:
      - user
      summary: 创建用户
      description: 注册时使用的创建用户接口
      operationId: CreateUser
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "用户账号密码信息"
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
  /login:
    post:
      tags:
      - user
      summary: 登录
      description: 用户登录 校验成功后返回cookie携带sessionid
      operationId: Login
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "用户账号密码信息"
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: "successful operation"
        405:
          description: "账号或密码错误"
  /logout:
    post:
      tags:
        - user
      summary: 登出
      description: 用户登出,服务端删除该sessionId对应的登录状态。
      operationId: Logout
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
  /comments:
    post:
      tags:
      - "comment"
      summary: 创建评论
      description: 创建评论和回复评论
      operationId: CreateComment
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "评论结构"
        required: true
        schema:
          $ref: "#/definitions/CreateCommentsReq"
      responses:
        200:
          description: "successful operation"
  /comments/{blogId}:
    get:
      tags:
      - "comment"
      summary: 获取评论
      description: ""
      operationId: GetComment
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: blogId
        description: "评论博客id"
        required: true
        type: integer
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CommentsResp"
        405:
          description: "Invalid input"
  
  /ghlogin:
    post:
      tags:
      - oauth
      summary: 登录
      description: Github 账号登录 校验成功后返回cookie携带sessionid
      operationId: GhLogin
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "github code"
        required: true
        schema:
          $ref: '#/definitions/OAuthReq'
      responses:
        200:
          description: "successful operation"
  /qqlogin:
    post:
      tags:
      - oauth
      summary: 登录
      description: qq 账号登录 校验成功后返回cookie携带sessionid
      operationId: QqLogin
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "github code"
        required: true
        schema:
          $ref: '#/definitions/OAuthReq'
      responses:
        200:
          description: "successful operation"
  /alipaylogin:
    post:
      tags:
      - oauth
      summary: 登录
      description: 支付宝 账号登录 校验成功后返回cookie携带sessionid
      operationId: AlipayLogin
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "github code"
        required: true
        schema:
          $ref: '#/definitions/OAuthReq'
      responses:
        200:
          description: "successful operation"

# model define
definitions:
  Article:
    type: object
    properties:
      id:
        type: integer
        format: int32
      user_id:
        type: integer
        format: int32
      title:
        type: integer
        format: int32
      content:
        type: string
      time:
        type: string
        format: date-time
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string

  User:
    type: object
    properties:
      id:
        type: integer
        format: int32
      username:
        type: string
      password:
        type: string
      avatarurl:
        type: string
      time:
        type: string
        format: date-time

  Comment:
    type: object
    properties:
      parentId:
        type: integer
        format: int32
      parentUserId:
        type: integer
        format: int32
      parentContent:
        type: string
      parentTime:
        type: string
      subComments:
        type: array
        items:
          $ref: "#/definitions/SubComment"
  
  SubComment:
    type: object
    properties:
      id:
        type: integer
        format: int32
      blogId:
        type: integer
        format: int32
      userId:
        type: string
      parentId:
        type: string
      replyTo:
        type: string
      content:
        type: string
      time:
        type: string
        format: date-time
  
  ArticlesResp:
    type: object
    properties:
      article:
        $ref: '#/definitions/Article'
      user:
        $ref: '#/definitions/User'
  
  CreateCommentsReq:
    type: object
    properties:
      blogId: 
        type: string
      parentCommentId:
        type: string
      replyTo:
        type: string
      content:
        type: string
  
  CommentsResp:
    type: object
    properties:
      comments: 
        type: array
        items:
          $ref: "#/definitions/Comment"
      users:
        type: array
        items:
          $ref: "#/definitions/User"
  
  OAuthReq:
    type: object
    properties:
      code: 
        type: string
  